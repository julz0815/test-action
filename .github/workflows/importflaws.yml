on:
  workflow_dispatch:
#  pull_request:
#    branches:
#      - main
#      - feature-123

jobs:
  get-policy-flaws:
    runs-on: ubuntu-latest
    container: 
      image: veracode/api-signing:latest
    steps:
      - name: get policy flaws
        run: |
          cd /tmp
          export VERACODE_API_KEY_ID=${{ secrets.VID }}
          export VERACODE_API_KEY_SECRET=${{ secrets.VKEY }}
          guid=$(http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v1/applications?name=test-action" | jq -r '._embedded.applications[0].guid') 
          echo GUID: ${guid}
          total_flaws=$(http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=STATIC&violates_policy=True" | jq -r '.page.total_elements')
          echo TOTAL_FLAWS: ${total_flaws}
          http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=STATIC&violates_policy=True&size=${total_flaws}" > policy_flaws.json

      - name: save results file
        uses: actions/upload-artifact@v3
        with:
          name: policy-flaws
          path: /tmp/policy_flaws.json

#  results_to_security_tab:
#    needs: get-policy-flaws
#    runs-on: ubuntu-latest
#    #if: ${{ failure() && inputs.enable_security_report }}
#    if: always()
#    name: Send policy scan report to Security tab
#    steps:
#      - name: Get scan results
#        uses: actions/download-artifact@v3
#        with:
#          name: policy-flaws
#          path: /tmp
#      - name: Convert policy scan output to SARIF format
#        id: convert
#        uses: Veracode/veracode-pipeline-scan-results-to-sarif@granular_severities
#        with:
#          scan-type: policy
#          results-json: '/tmp/policy_flaws.json'
#          output-results-sarif: veracode-results.sarif
#          source_base_path_1: "com/:src/main/java/com/"
#          source_base_path_2: "WEB-INF:src/main/webapp/WEB-INF"
          
  import-policy-flaws:
    needs: get-policy-flaws
    runs-on: ubuntu-latest
    steps:
      - name: get flaw file
        uses: actions/download-artifact@v3
        with:
          name: policy-flaws
          path: /tmp

      - name: import flaws as issues
        uses: veracode/veracode-flaws-to-issues@FixEmptyResults
        with:
          scan-results-json: '/tmp/policy_flaws.json'
#          debug: true
          source_base_path_1: "com/:src/main/java/com/"
          source_base_path_2: "WEB-INF:src/main/webapp/WEB-INF"
